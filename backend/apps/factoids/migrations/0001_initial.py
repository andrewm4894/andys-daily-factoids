# Generated by Django 5.2.6 on 2025-09-22 12:39

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Factoid',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('emoji', models.CharField(blank=True, max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('votes_up', models.PositiveIntegerField(default=0)),
                ('votes_down', models.PositiveIntegerField(default=0)),
                ('generation_metadata', models.JSONField(blank=True, default=dict)),
                ('cost_usd', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog', models.JSONField(blank=True, default=list)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Model cache',
            },
        ),
        migrations.CreateModel(
            name='GenerationRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_hash', models.CharField(max_length=128)),
                ('request_source', models.CharField(choices=[('manual', 'Manual'), ('scheduled', 'Scheduled'), ('payment', 'Payment'), ('chat_agent', 'Chat Agent')], default='manual', max_length=16)),
                ('model_key', models.CharField(max_length=255)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=16)),
                ('expected_cost_usd', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('actual_cost_usd', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('token_usage_prompt', models.IntegerField(blank=True, null=True)),
                ('token_usage_completion', models.IntegerField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generation_requests', to='core.apikey')),
                ('retry_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retries', to='factoids.generationrequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FactoidFeedback',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('vote', models.CharField(blank=True, max_length=8)),
                ('client_hash', models.CharField(blank=True, max_length=128)),
                ('comments', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('factoid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='factoids.factoid')),
                ('generation_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback', to='factoids.generationrequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='factoid',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factoids', to='factoids.generationrequest'),
        ),
        migrations.CreateModel(
            name='VoteAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_hash', models.CharField(max_length=128)),
                ('vote_type', models.CharField(choices=[('up', 'Up'), ('down', 'Down')], max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('factoid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='factoids.factoid')),
            ],
        ),
        migrations.AddIndex(
            model_name='generationrequest',
            index=models.Index(fields=['client_hash'], name='factoids_ge_client__cdde5c_idx'),
        ),
        migrations.AddIndex(
            model_name='generationrequest',
            index=models.Index(fields=['status'], name='factoids_ge_status_ff70cc_idx'),
        ),
        migrations.AddIndex(
            model_name='factoidfeedback',
            index=models.Index(fields=['factoid', 'created_at'], name='factoids_fa_factoid_95754f_idx'),
        ),
        migrations.AddIndex(
            model_name='factoidfeedback',
            index=models.Index(fields=['client_hash'], name='factoids_fa_client__bcef04_idx'),
        ),
        migrations.AddIndex(
            model_name='factoid',
            index=models.Index(fields=['created_at'], name='factoids_fa_created_95dcd7_idx'),
        ),
        migrations.AddIndex(
            model_name='factoid',
            index=models.Index(fields=['subject'], name='factoids_fa_subject_978337_idx'),
        ),
        migrations.AddIndex(
            model_name='voteaggregate',
            index=models.Index(fields=['factoid', 'created_at'], name='factoids_vo_factoid_dfe748_idx'),
        ),
        migrations.AddConstraint(
            model_name='voteaggregate',
            constraint=models.UniqueConstraint(fields=('factoid', 'client_hash'), name='unique_factoid_vote'),
        ),
    ]
