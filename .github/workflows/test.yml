name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run linting
      run: |
        cd frontend
        npm run lint
    
    - name: Run tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        directory: ./frontend/coverage
        fail_ci_if_error: false

  backend-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Validate Netlify Functions
      run: |
        # Check that all Netlify functions are valid JavaScript
        for file in netlify/functions/*.js; do
          echo "Validating $file"
          node -c "$file"
        done
    
    - name: Test Netlify Functions structure
      run: |
        # Verify all required functions exist
        required_functions=("generateFactoid.js" "getFactoids.js" "getModels.js" "voteFactoid.js" "checkRateLimit.js")
        for func in "${required_functions[@]}"; do
          if [ ! -f "netlify/functions/$func" ]; then
            echo "Missing required function: $func"
            exit 1
          fi
        done
        echo "All required Netlify functions are present"

  integration-test:
    runs-on: ubuntu-latest
    needs: [test, backend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build application
      run: |
        cd frontend
        npm run build
    
    - name: Run full test suite
      run: |
        make test
