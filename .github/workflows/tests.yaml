name: tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps

    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint

    - name: Check frontend formatting
      run: |
        cd frontend
        npm run format:check

    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false

    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

    - name: Build frontend application
      run: |
        cd frontend
        npm run build

  test-backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install backend dependencies
      run: |
        cd backend
        uv sync --extra dev

    - name: Setup Django test database
      run: |
        cd backend
        uv run python manage.py migrate --settings=factoids_project.settings.local

    - name: Run backend linting
      run: |
        cd backend
        uv run ruff check .

    - name: Check backend formatting
      run: |
        cd backend
        uv run ruff format --check .

    - name: Run backend tests
      run: |
        cd backend
        uv run pytest

    - name: Run backend smoke tests
      run: |
        cd backend
        uv run python scripts/test_generate_factoid.py --topic "test topic"

  test-integration:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Run integration tests
      run: |
        node tests/integration/rateLimitIntegration.test.mjs
